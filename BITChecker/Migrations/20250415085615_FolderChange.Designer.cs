// <auto-generated />
using System;
using BITChecker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BITChecker.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250415085615_FolderChange")]
    partial class FolderChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("BITChecker.Model.GPA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCalculated")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GPACalculated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GPAs");
                });

            modelBuilder.Entity("BITChecker.Model.PerSubjectScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GPAId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PointValue")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("QaulityPoint")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GPAId");

                    b.HasIndex("SubjectId");

                    b.ToTable("PerSubjectScores");
                });

            modelBuilder.Entity("BITChecker.Model.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<char>("CourseType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Credit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GPACredit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Semester")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("BITChecker.Model.PerSubjectScore", b =>
                {
                    b.HasOne("BITChecker.Model.GPA", "GPA")
                        .WithMany("SubjectScores")
                        .HasForeignKey("GPAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BITChecker.Model.Subject", "Subject")
                        .WithMany("PerSubjectScores")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GPA");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BITChecker.Model.GPA", b =>
                {
                    b.Navigation("SubjectScores");
                });

            modelBuilder.Entity("BITChecker.Model.Subject", b =>
                {
                    b.Navigation("PerSubjectScores");
                });
#pragma warning restore 612, 618
        }
    }
}
